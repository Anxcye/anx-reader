name: Build for App Store Connect

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      ASC_KEY_ID:
        required: true
      ASC_ISSUER_ID:
        required: true
      ASC_KEY_P8_BASE64:
        required: true
      MATCH_PASSWORD:
        required: true
      MATCH_GIT_BASIC_AUTHORIZATION:
        required: true
      APP_BUNDLE_ID:
        required: true

jobs:
  build-appstore:
    runs-on: macos-15
    timeout-minutes: 60
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.4'  

      - name: check ruby and pod versions
        run: |
          cd ios && bundle install
          which ruby && ruby --version
          which pod && pod --version

      - name: Get Dependencies
        run: |
          sudo xcode-select -switch /Applications/Xcode_16.4.0.app/Contents/Developer
          # xcodebuild -downloadPlatform iOS -buildVersion 18.2
          flutter --version
          # flutter doctor -v
          # flutter pub get
          # dart run build_runner build --delete-conflicting-outputs

      - name: Build iOS App
        id: ios_build
        timeout-minutes: 26
        run: |
          cd ios
          bundle install
          timeout 1500 fastlane ios release_app_store || EXIT_CODE=$?
          if [ "${EXIT_CODE:-0}" -eq 124 ]; then
            echo "iOS build timed out, but continuing..."
            echo "ios_timeout=true" >> $GITHUB_OUTPUT
            exit 0
          elif [ "${EXIT_CODE:-0}" -ne 0 ]; then
            echo "iOS build failed with non-timeout error"
            echo "ios_timeout=false" >> $GITHUB_OUTPUT
            exit $EXIT_CODE
          else
            echo "iOS build completed successfully"
            echo "ios_timeout=false" >> $GITHUB_OUTPUT
          fi
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}

      - name: Check iOS Build Status
        if: steps.ios_build.outcome == 'failure' && steps.ios_build.outputs.ios_timeout != 'true'
        run: |
          echo "iOS build failed with non-timeout error, stopping workflow"
          exit 1

      - name: Build macos App
        if: always() && (steps.ios_build.outcome == 'success' || steps.ios_build.outputs.ios_timeout == 'true')
        id: macos_build
        timeout-minutes: 26
        run: |
          cd macos
          bundle install
          timeout 1500 fastlane release_app_store || EXIT_CODE=$?
          if [ "${EXIT_CODE:-0}" -eq 124 ]; then
            echo "macOS build timed out, but continuing..."
            echo "macos_timeout=true" >> $GITHUB_OUTPUT
            exit 0
          elif [ "${EXIT_CODE:-0}" -ne 0 ]; then
            echo "macOS build failed with non-timeout error"
            echo "macos_timeout=false" >> $GITHUB_OUTPUT
            exit $EXIT_CODE
          else
            echo "macOS build completed successfully"
            echo "macos_timeout=false" >> $GITHUB_OUTPUT
          fi
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}

      - name: Check macOS Build Status
        if: steps.macos_build.outcome == 'failure' && steps.macos_build.outputs.macos_timeout != 'true'
        run: |
          echo "macOS build failed with non-timeout error, stopping workflow"
          exit 1
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}